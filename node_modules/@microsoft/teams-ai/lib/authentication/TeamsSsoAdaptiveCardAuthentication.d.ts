import { TurnContext } from 'botbuilder-core';
import { TokenResponse } from 'botframework-schema';
import { AdaptiveCardAuthenticationBase, AdaptiveCardLoginRequest } from './AdaptiveCardAuthenticationBase';
/**
 * @internal
 *
 * Handles authentication using Teams SSO for Adaptive Cards in Teams.
 */
export declare class TeamsSsoAdaptiveCardAuthentication extends AdaptiveCardAuthenticationBase {
    /**
     * Initializes a new instance of the TeamsSsoAdaptiveCardAuthentication class.
     */
    constructor();
    /**
     * Handles the SSO token exchange.
     */
    handleSsoTokenExchange(): Promise<never>;
    /**
     * Handles the user sign-in.
     * @param {TurnContext} context - The turn context.
     * @param {string} magicCode - The magic code from user sign-in.
     */
    handleUserSignIn(context: TurnContext, magicCode: string): Promise<TokenResponse | undefined>;
    /**
     * Gets the login request for Adaptive Card authentication.
     * @param {TurnContext} context - The turn context.
     */
    getLoginRequest(context: TurnContext): Promise<AdaptiveCardLoginRequest>;
    /**
     * Checks if the activity is valid for Adaptive Card authentication.
     * @param {TurnContext} context - The turn context.
     * @returns {boolean} A boolean indicating if the activity is valid.
     */
    isValidActivity(context: TurnContext): boolean;
}
//# sourceMappingURL=TeamsSsoAdaptiveCardAuthentication.d.ts.map