/**
 * @module teams-ai
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { TurnContext } from 'botbuilder';
import { Memory } from '../MemoryFork';
import { Tokenizer } from '../tokenizers';
import { Message } from './Message';
import { PromptFunctions } from './PromptFunctions';
import { RenderedPromptSection } from './PromptSection';
import { PromptSectionBase } from './PromptSectionBase';
/**
 * A section capable of rendering user input text and images as a user message.
 */
export declare class UserInputMessage extends PromptSectionBase {
    private readonly _inputVariable;
    private readonly _filesVariable;
    /**
     * Creates a new 'UserInputMessage' instance.
     * @param {number} tokens Optional. Sizing strategy for this section. Defaults to `auto`.
     * @param {string} inputVariable Optional. Name of the variable containing the user input text. Defaults to `input`.
     * @param {string} filesVariable Optional. Name of the variable containing the user input files. Defaults to `inputFiles`.
     */
    constructor(tokens?: number, inputVariable?: string, filesVariable?: string);
    /**
     * @private
     * @param {TurnContext} context Turn context for the message to be rendered.
     * @param {Memory} memory Memory in storage.
     * @param {PromptFunctions} functions Prompt functions.
     * @param {Tokenizer} tokenizer Tokenizer.
     * @param {number} maxTokens Max tokens to be used for rendering.
     * @returns {Promise<RenderedPromptSection<Message<any>[]>>} Rendered prompt section.
     */
    renderAsMessages(context: TurnContext, memory: Memory, functions: PromptFunctions, tokenizer: Tokenizer, maxTokens: number): Promise<RenderedPromptSection<Message<any>[]>>;
}
//# sourceMappingURL=UserInputMessage.d.ts.map